以下に、あるシステムのユースケース図（PlantUML）と、そのユースケース記述（Markdown形式）が与えられています。これらが相互に矛盾なく整合しているかどうかを、次の観点に基づいて検証してください。

🎯 検証の目的
ユースケース図に描かれた機能と、Markdown形式で記述されたユースケース仕様の間に、
抜け
ダブり
不整合
がないことを確認し、システム要件の漏れを防ぐ。

✅ 確認観点
1. 一致性
ユースケース図に記載されているすべてのユースケースが、ユースケース記述にも存在しているか？
記述にあるユースケースが、ユースケース図にも描かれているか？

2. アクターの整合性
各ユースケースで関与するアクターが、図と記述で一致しているか？
例：「利用者」が図では接続されているが、記述には登場しない場合は不整合。

3. 機能の意味・目的の一致
同一名称のユースケースであっても、図と記述で意味が異なっていないか？
記述内容が図の意図から逸れていないか？
特に抽象的な名称（例：「購入する」など）は注意。

4. 抜け漏れ・記述不足
図にあるが記述されていないユースケースが存在しないか？
記述に詳細が足りないユースケース（例：主シナリオが省略されているなど）がないか？

5. 表記の一貫性
ユースケース名が図と記述で完全に一致しているか（表記ゆれがないか）？
同一の用語（「釣銭」「返金」など）が統一されているか？

🔁 期待する出力例（形式）
各ユースケースに対して以下の情報を列挙：
✅ 一致しているもの（図と記述が対応し、内容も合っている）
⚠ 不一致・不整合なもの（例とともに）
❌ 欠落しているもの（図にあるが記述がない、またはその逆）